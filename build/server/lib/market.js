// Generated by CoffeeScript 1.9.3
var apps, comparator, del, download, exec, fs, getApps, isDownloading, log, readApps, request;

request = require('request-json');

log = require('printit')({
  prefix: 'market'
});

exec = require('child_process').exec;

fs = require('fs');

del = require('del');

apps = [];

isDownloading = false;

comparator = function(a, b) {
  if (a.comment === 'official application' && b.comment !== 'official application') {
    return -1;
  } else if (a.comment !== 'official application' && b.comment === 'official application') {
    return 1;
  } else if (a.name > b.name) {
    return 1;
  } else if (a.name < b.name) {
    return -1;
  } else {
    return 0;
  }
};

readApps = function(cb) {
  return fs.readdir('./market/apps', function(err, files) {
    var file, i, len;
    if (err != null) {
      log.error("[Error] Read market: " + err);
    }
    if (err != null) {
      return cb(err);
    }
    apps = [];
    for (i = 0, len = files.length; i < len; i++) {
      file = files[i];
      try {
        apps.push(require("../../../market/apps/" + file));
      } catch (_error) {
        apps.push(require("../../market/apps/" + file));
      }
    }
    apps.sort(comparator);
    return cb(null, apps);
  });
};

download = module.exports.download = function(callback) {
  var branch, command, url;
  isDownloading = true;
  if (process.env.MARKET != null) {
    url = "https://gitlab.cozycloud.cc/zoe/cozy-registry.git";
    branch = process.env.MARKET;
  } else {
    url = "https://github.com/cozy/cozy-registry.git";
    branch = "master";
  }
  command = ("git clone " + url + " markettmp && ") + "cd markettmp && " + ("git checkout " + branch);
  return exec(command, {}, function(err, stdout, stderr) {
    if (err != null) {
      if (err != null) {
        log.error("[Error] Clone market: " + err);
      }
      return del('./markettmp', function(error) {
        if (err != null) {
          return callback(err);
        }
      });
    } else {
      return del('./market', function(err) {
        if (err != null) {
          log.error("[Error] delete market : " + err);
        }
        return exec("mv markettmp/ market", function(err, stdout, stderr) {
          if (err != null) {
            log.error("[Error] Copie market: " + err);
          }
          return readApps(function(err, apps) {
            isDownloading = false;
            return callback(err, apps);
          });
        });
      });
    }
  });
};

getApps = module.exports.getApps = function(cb) {
  if (apps.length > 0) {
    return cb(null, apps);
  } else if (fs.existsSync('./market/apps')) {
    return readApps(cb);
  } else {
    if (isDownloading) {
      return setTimeout(function() {
        return getApps(cb);
      }, 1000);
    } else {
      return download(cb);
    }
  }
};

module.exports.getApp = function(app) {
  try {
    return [null, require("../../../market/apps/" + app)];
  } catch (_error) {
    try {
      return [null, require("../../market/apps/" + app)];
    } catch (_error) {
      return ['not found', null];
    }
  }
};
