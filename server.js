// Generated by CoffeeScript 1.6.3
var americano, initProxy, port, request, setupChecking, setupRealtime;

americano = require('americano');

request = require('request-json');

initProxy = require('./server/initializers/proxy');

setupRealtime = require('./server/initializers/realtime');

setupChecking = require('./server/initializers/checking');

process.on('uncaughtException', function(err) {
  console.error(err);
  return console.error(err.stack);
});

port = process.env.PORT || 9103;

americano.start({
  name: 'Cozy Home',
  port: port
}, function(app, server) {
  var ctrler, env, format, logFile;
  app.server = server;
  if (process.env.NODE_ENV !== "test") {
    initProxy();
  }
  ctrler = require('./server/controllers/applications').loadApplication;
  app.param('slug', ctrler);
  setupRealtime(app);
  setupChecking();
  if (process.env.NODE_ENV === "production") {
    format = '[:date] :method :url :status :response-time ms';
    env = process.env.NODE_ENV;
    if (!fs.existsSync('./log')) {
      fs.mkdirSync('log');
    }
    logFile = fs.createWriteStream("./log/production.log", {
      flags: 'w'
    });
    this.app.use(express.logger({
      stream: logFile,
      format: '[:date] :method :url :status :response-time ms'
    }));
    console.log = function(text) {
      return logFile.write(text + '\n');
    };
  }
  if (typeof callback !== "undefined" && callback !== null) {
    return callback(app);
  }
});
