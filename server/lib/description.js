// Generated by CoffeeScript 1.6.2
(function() {
  var fs, https, request, url, util;

  fs = require('fs');

  https = require('https');

  url = require('url');

  util = require('util');

  request = require('request-json');

  exports.DescriptionManager = (function() {
    function DescriptionManager() {
      this.description = " ";
    }

    DescriptionManager.prototype.get = function(app, callback) {
      var basePath, client, getStars, metaData, path,
        _this = this;

      metaData = {};
      getStars = function() {
        var clientStars, path;

        clientStars = request.newClient("https://api.github.com/");
        path = "repos/" + basePath + "/stargazers";
        return clientStars.get(path, function(err, res, body) {
          metaData.stars = body.length;
          return callback(metaData);
        });
      };
      basePath = app.git.substring(19, app.git.length - 4);
      if (app.branch != null) {
        basePath = basePath + '/' + app.branch;
      } else {
        basePath = basePath + '/master';
      }
      path = basePath + '/package.json';
      client = request.newClient("https://raw.github.com/");
      return client.get(path, function(err, res, config) {
        if (res.statusCode === 404) {
          return callback({
            code: 404,
            msgs: ['package.json not found']
          }, null);
        } else if (res.statusCode === 500) {
          return callback({
            code: 500,
            msgs: ['server error occured']
          }, null);
        } else {
          if (config.description != null) {
            metaData.description = config.description;
          }
          if (config.name != null) {
            metaData.name = config.name.replace('cozy-', '');
          }
          if (config['cozy-displayName'] != null) {
            metaData.displayName = config['cozy-displayName'];
          } else {
            metaData.displayName = config.name.replace('cozy-', '');
          }
          if (config['cozy-permissions'] != null) {
            metaData.permissions = config['cozy-permissions'];
          }
          return getStars();
        }
      });
    };

    return DescriptionManager;

  })();

}).call(this);
